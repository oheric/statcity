<!DOCTYPE html>
<html>
<head>

</head>
<body>

<style type ="text/css">
table, th, td{
	border: 1px solid black
}
td {
	padding: 8px;
}

#playerstats{
	
	color: green;
}

#playerinfo{
	font-size: 24px;
	color: red;
}

#bio{
	font-family: Verdana;
}

#avgstats{
	font-size: 20px;
	color: blue;
	font-family: Verdana;
}

#photo{
	width: 345px;
	height: 230px;

}

#logo{
	width: 70px;
	height: 70px;
}



</style>

<% require 'nokogiri' %>
<% require 'open-uri' %>
<% url = "http://sports.yahoo.com/nba/players/" + "3513" + "/gamelog/" %>
<% doc = Nokogiri::HTML(open(url)) %>
<% stats = [] %>

<% doc.css(".data-container").each do |dc| %>
<% stats.push(dc.at_css("tbody").text.split(" ").each_slice(24).to_a) %>
<%end%>

<div id="playerinfo">
<%= doc.css(".player-info").text%>
</div>
<div id="bio">
<%= doc.css(".bio").text %>
</div>
<div id="avgstats">
<%= doc.css(".stats li").text %>
<div>

<div id="logo" style="<%= doc.css(".team-logo @style") %>">


		

	</div>
	<div id="photo" style="<%= doc.css(".player-image img @style") %>">
	
		
	</div>

<%= link_to "Player Notes", show_path%>
<%= link_to "Player Usage", playerusage_path %>
<%= link_to "Team Pace", pace_path %>


<div id ="playerstats">
<table>
<thead>
	<tr>
		<th>Date</th>
		<th></th>
	
		<th>Opp.</th>
		<th>Result</th>
		<th>Score</th>
		<th>Min</th>
		<th>FGM</th>
		<th>FGA</th>
		<th>FG%</th>
		<th>3PM</th>
		<th>3PA</th>
		<th>3PT%</th>
		<th>FTM</th>
		<th>FTA</th>
		<th>FT%</th>
		<th>Off. Reb</th>
		<th>Def. Reb</th>
		<th>Reb</th>
		<th>Ast</th>
		<th>TO</th>
		<th>Stl</th>
		<th>Blk</th>
		<th>PF</th>
		<th>Pts</th>
		<th>FanDuel Points</th>
	</tr>
</thead>



<tbody>
	<% if stats[0] == nil %>
	<%= "Player has not played this season." %>
	<% else stats[0].each do |i|%>
	<% if i != stats[0].last %>
<tr>
		<% i.each do |b|%>
	
			<td><%=b %></td>

	
	
	<% end %>
	
	<% fanduel = i.at(23).to_i + ((i.at(17).to_i) * 1.2) + ((i.at(18).to_i) * 1.5) + ((i.at(21).to_i) * 2) + ((i.at(20).to_i) * 2) - i.at(19).to_i %>
	
	<td><%=fanduel.round(2)%></td>

	<%end %>
	
</tr>
<% end %>
<%end%>

</tbody>
</table>
</div>
<script src="http://d3js.org/d3.v3.js"></script>
<script>

var margin = {top: 20, right: 20, bottom: 30, left: 50},
    width = 960 - margin.left - margin.right,
    height = 500 - margin.top - margin.bottom;

var parseDate = d3.time.format("%d-%b-%y").parse;

var x = d3.time.scale()
    .range([0, width]);

var y = d3.scale.linear()
    .range([height, 0]);

var xAxis = d3.svg.axis()
    .scale(x)
    .orient("bottom");

var yAxis = d3.svg.axis()
    .scale(y)
    .orient("left");

var line = d3.svg.line()
    .x(function(d) { return x(d.date); })
    .y(function(d) { return y(d.close); });

var svg = d3.select("body").append("svg")
    .attr("width", width + margin.left + margin.right)
    .attr("height", height + margin.top + margin.bottom)
  .append("g")
    .attr("transform", "translate(" + margin.left + "," + margin.top + ")");

d3.tsv("/assets/data.tsv", function(error, data) {
  data.forEach(function(d) {
    d.date = parseDate(d.date);
    d.close = +d.close;
  });

  x.domain(d3.extent(data, function(d) { return d.date; }));
  y.domain(d3.extent(data, function(d) { return d.close; }));

  svg.append("g")
      .attr("class", "x axis")
      .attr("transform", "translate(0," + height + ")")
      .call(xAxis);

  svg.append("g")
      .attr("class", "y axis")
      .call(yAxis)
    .append("text")
      .attr("transform", "rotate(-90)")
      .attr("y", 6)
      .attr("dy", ".71em")
      .style("text-anchor", "end")
      .text("Price ($)");

  svg.append("path")
      .datum(data)
      .attr("class", "line")
      .attr("d", line);
 });

</script>
	
	

</body>
</html>